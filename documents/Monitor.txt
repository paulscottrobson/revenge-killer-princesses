

AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  1


                ; RCA COSMAC VIP CDP18S711 Monitor ROM Listing
                ; disassembled by Lee A. Hart <leeahart@earthlink.net>
                ;
                ;       The ROM is partially decoded to occupy all memory
                ;       from 8000-FFFFh. Execution normally begins after
                ;       Reset with P=0, X=0, R(0)=0000, and the address
                ;       inhibit latch set so the monitor ROM is also at
                ;       0000-7FFFh instead of RAM. Thus the 1802 begins
                ;       executing the monitor ROM code.
                ;
                ; register usage
                ;
                ;       R0 = 1861 video DMA pointer
                ;       R1 = 1861 interrupt handler PC
                ;       R2 = stack pointer
                ;       R3 = main PC
                ;       R4 = dismem subroutine PC
                ;       R5 = display subroutine PC
                ;       R6 = address pointer to read/write memory
                ;       R7 = getbyte subroutine PC
                ;       R8 = beeper timer (decremented by interrupt handler)
                ;       RA = bitmap table pointer 
                ;       RC = key subroutine PC
                
 8000                   org  8000h
                
 8000 F880              ldi high here1  ;set R2=8008
 8002 B2                phi r2
 8003 F808              ldi low here1
 8005 A2                plo r2
 8006 E2                sex r2
 8007 D2                sep r2          ;make R2 the program counter
 8008           here1:
 8008 64                out 4           ;reset address inhibit latch
 8009 00                db  0
 800A 62                out 2           ;set keyboard latch to "C"
 800B 0C                db  0Ch
 800C F8FF              ldi 0FFh        ;test for high end of RAM
 800E A1                plo r1
 800F F80F              ldi 0Fh
 8011 B1                phi r1          ;set R1=0FFF (4k; max RAM on VIP)
 8012           notram:
 8012 F8AA              ldi 0AAh        ;store AA
 8014 51                str r1
 8015 01                ldn r1          ;load it
 8016 FBAA              xri 0AAh        ;if it worked,
 8018 3222              bz  isram       ;  then R1 points to top of RAM
 801A 91                ghi r1
 801B FF04              smi 4           ;else R1=R1-0400 (try 1k lower)
 801D 3B22              bnf isram       ;if underflow, no RAM, continue anyway
 801F B1                phi r1


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  2


 8020 3012              br  notram      ;if not 4k of RAM, then try 1k lower
 8022           isram:
 8022 3628              b3  monitor     ;if "C" key is not pressed,
 8024 90                ghi r0          ;  set R0=0000
 8025 A0                plo r0
 8026 E0                sex r0          ;  set X=0, P=0,
 8027 D0                sep r0          ;  and go execute program at 0
 8028           monitor:
 8028 E1                sex r1
 8029           clear10:                ;clear RAM from top=0xFF to 0xAF
 8029 F800              ldi 0           ;  clear a byte
 802B 73                stxd            ;  decrement pointer
 802C 81                glo r1
 802D FBAF              xri 0AFh        ;  until address=0xAF
 802F 3A29              bnz clear10
 8031                                   ;create RAM program to save registers
 8031 F8D2              ldi 0D2h        ;  push SEP R2
 8033 73                stxd
 8034 F89F              ldi 9Fh         ;  push GHI RF
 8036 51                str r1
 8037 81                glo r1          ;point R0 to RAM program
 8038 A0                plo r0
 8039 91                ghi r1
 803A B0                phi r0
 803B F8CF              ldi 0CFh
 803D A1                plo r1
 803E           savereg:
 803E D0                sep r0          ;call the RAM program
 803F 73                stxd            ;push register contents it returns
 8040 20                dec r0
 8041 20                dec r0          ;point R0 to RAM program again
 8042 40                lda r0          ;decrement GHI Rx instruction
 8043 FF01              smi 1
 8045 20                dec r0          ;point R0 to RAM program again
 8046 50                str r0
 8047 FB82              xri 82h         ;if not down to GHI R2,
 8049 3A3E              bnz savereg     ;  then repeat
                
 804B 92                ghi r2          ;change PC to R3
 804C B3                phi r3
 804D F851              ldi low here2
 804F A3                plo r3
 8050 D3                sep r3  
 8051           here2:
 8051 90                ghi r0
 8052 B2                phi r2
 8053 BB                phi rb
 8054 BD                phi rd
 8055 F881              ldi 81h
 8057 B1                phi r1
 8058 B4                phi r4


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  3


 8059 B5                phi r5
 805A B7                phi r7
 805B BA                phi ra          ;RA=81xx
 805C BC                phi rc
 805D F846              ldi low int
 805F A1                plo r1          ;R1=8146 (1861 interrupt handler)
 8060 F8AF              ldi 0AFh
 8062 A2                plo r2          ;R2=0xAF
 8063 F8DD              ldi low dismem
 8065 A4                plo r4          ;R4=81DD (display memory subroutine)
 8066 F8C6              ldi low display
 8068 A5                plo r5          ;R5=81C6 (display hex char subroutine)
 8069 F8BA              ldi low getbyte
 806B A7                plo r7          ;R7=81BA (get hex byte subroutine)
 806C F8A1              ldi low keyfound
 806E AC                plo rc          ;RC=81A1 (get key subroutine)
                
 806F E2                sex r2
 8070 69                inp 1           ;turn on 1861 TV display
 8071 DC                sep rc          ;get 1st key
 8072 D7                sep r7          ;  shift, get 2nd key
 8073 D7                sep r7          ;  shift, get 3rd key
 8074 D7                sep r7          ;  shift, get 4th key
 8075 B6                phi r6          ;save in R6.0
 8076 D7                sep r7          ;get key
 8077 D7                sep r7          ;  shift, get another
 8078 D7                sep r7          ;  shift, get another
 8079 A6                plo r6          ;save in R6.1
 807A D4                sep r4          ;display address R6, and M(R6)
 807B DC                sep rc          ;get a key
 807C BE                phi re          ;  save it
 807D 32F4              bz  mwrite      ;if "0", go to Memory Write command
 807F FB0A              xri 10
 8081 32EF              bz  mread       ;if "A", go to Memory Read command
 8083 DC                sep rc          ;get a key
 8084 AE                plo re          ;  save it
 8085 22                dec r2
 8086 61                out 1           ;turn off TV
 8087 9E                ghi re          ;get saved key
 8088 FB0B              xri 0Bh
 808A 32C2              bz  tread       ;if "B", go to Tape Read command
 808C 9E                ghi re          ;get saved key
 808D FB0F              xri 0Fh         ;if anything but "F",
 808F 3A8F              bnz $           ;  loop forever
                ;
                ; twrite -- tape write command
                ;
 8091 F86F              ldi 6Fh         ;change RC to point to Beep subroutine
 8093 AC                plo rc
 8094 F840              ldi 40h
 8096 B9                phi r9


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  4


 8097           twrite:
 8097 93                ghi r3
 8098 F6                shr
 8099 DC                sep rc          ;call Beep to write 1 bit
 809A 29                dec r9
 809B 99                ghi r9
 809C 3A97              bnz twrite
 809E           twrite1:
 809E F810              ldi 10h
 80A0 A7                plo r7
 80A1 F808              ldi 8
 80A3 A9                plo r9
 80A4 46                lda r6
 80A5 B7                phi r7
 80A6 93                ghi r3
 80A7 FE                shl
 80A8 DC                sep rc          ;call Beep to write 1 bit
 80A9 86                glo r6
 80AA 3AAD              bnz twrite2
 80AC 2E                dec re
 80AD           twrite2:
 80AD 97                ghi r7
 80AE F6                shr
 80AF B7                phi r7
 80B0 DC                sep rc          ;call Beep to write 1 bit
 80B1 29                dec r9
 80B2 89                glo r9
 80B3 3AAD              bnz twrite2
 80B5 17                inc r7
 80B6 87                glo r7
 80B7 F6                shr
 80B8 DC                sep rc          ;call Beep to write 1 bit
 80B9 8E                glo re
 80BA 3A9E              bnz twrite1
 80BC DC                sep rc          ;call Beep to write 1 bit
 80BD           tread6:
 80BD 69                inp 1           ;turn on TV display
 80BE 26                dec r6
 80BF D4                sep r4          ;display last byte written
 80C0 30C0              br  $           ;end; loop forever
                ;
                ; tread -- tape read command
                ;
 80C2           tread:
 80C2 F883              ldi 83h         ;change RC to point to tapein
 80C4 AC                plo rc          ;  subroutine to read 1 bit
 80C5           tread1:
 80C5 F80A              ldi 10
 80C7 B9                phi r9
 80C8           tread2:
 80C8 DC                sep rc          ;call TapeIn to read 1 bit


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  5


 80C9 33C5              bdf tread1
 80CB 29                dec r9
 80CC 99                ghi r9
 80CD 3AC8              bnz tread2
 80CF           tread5:
 80CF DC                sep rc          ;call TapeIn to read 1 bit
 80D0 3BCF              bnf tread5
 80D2 F809              ldi 9
 80D4 A9                plo 9
 80D5 A7                plo 7
 80D6           tread3:
 80D6 97                ghi r7
 80D7 76                shrc
 80D8 B7                phi r7
 80D9 29                dec r9
 80DA DC                sep rc          ;call TapeIn to read 1 bit
 80DB 89                glo r9
 80DC 3AD6              bnz tread3
 80DE 87                glo r7
 80DF F6                shr
 80E0 33E3              bdf tread4
 80E2 7B                seq
 80E3           tread4:
 80E3 97                ghi r7
 80E4 56                str r6
 80E5 16                inc r6
 80E6 86                glo r6
 80E7 3ACF              bnz tread5
 80E9 2E                dec re
 80EA 8E                glo re
 80EB 3ACF              bnz tread5
 80ED 30BD              br  tread6      ;end; loop forever
                ;
                ; mread -- memory read command
                ;
 80EF           mread:
 80EF DC                sep rc          ;get a key
 80F0 16                inc r6          ;increment address in R6
 80F1 D4                sep r4          ;display address R6 and M(R6)
 80F2 30EF              br  mread       ;repeat forever
                ;
                ; mwrite -- memory write command
                ;
 80F4           mwrite:
 80F4 D7                sep r7          ;get keys, assemble into byte
 80F5 D7                sep r7
 80F6 D7                sep r7
 80F7 56                str r6
 80F8 D4                sep r4          ;display address R6 and M(R6)
 80F9                                   ;  (i.e. new contents of memory)
 80F9 16                inc r6          ;increment memory pointer


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  6


 80FA 30F4              br  mwrite      ;repeat forever
                
 80FC 00000000          db  0,0,0,0     ;unused?
                ;
                ; index table -- converts hex digit into address in bitmap
                ;       table where that digit's bitmap begins.
                
 8100                   org 8100h
 8100           index:
 8100 30                db  30h         ;"0" digit bitmap starting addr
 8101 39                db  39h         ;"1"
 8102 22                db  22h         ;"2"
 8103 2A                db  2Ah         ;"3"
 8104 3E                db  3Eh         ;"4"
 8105 20                db  20h         ;"5"
 8106 24                db  24h         ;"6"
 8107 34                db  34h         ;"7"
 8108 26                db  26h         ;"8"
 8109 28                db  28h         ;"9"
 810A 2E                db  2Eh         ;"A"
 810B 18                db  18h         ;"B"
 810C 14                db  14h         ;"C"
 810D 1C                db  1Ch         ;"D"
 810E 10                db  10h         ;"E"
 810F 12                db  12h         ;"F"
                ;
                ; bitmap table -- bit patterns to put on the screen to
                ;       display hex characters 0-F in a 5-high by 8-wide
                ;       format. Each pattern uses 5 consecutive bytes.
                ;       1's are bright, 0's are dark pixels. The patterns
                ;       overlap to save memory.
 8110           bitmap:
 8110 F0                db  11110000b   ;top of "E"
 8111 80                db  10000000b
 8112 F0                db  11110000b   ;top of "F"
 8113 80                db  10000000b
 8114 F0                db  11110000b   ;top of "C"
 8115 80                db  10000000b
 8116 80                db  10000000b
 8117 80                db  10000000b
 8118 F0                db  11110000b   ;top of "B"
 8119 50                db  01010000b
 811A 70                db  01110000b
 811B 50                db  01010000b
 811C F0                db  11110000b   ;top of "D"
 811D 50                db  01010000b
 811E 50                db  01010000b
 811F 50                db  01010000b
 8120 F0                db  11110000b   ;top of "5"
 8121 80                db  10000000b
 8122 F0                db  11110000b   ;top of "2"


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  7


 8123 10                db  00010000b
 8124 F0                db  11110000b   ;top of "6"
 8125 80                db  10000000b
 8126 F0                db  11110000b   ;top of "8"
 8127 90                db  10010000b
 8128 F0                db  11110000b   ;top of "9"
 8129 90                db  10010000b
 812A F0                db  11110000b   ;top of "3"
 812B 10                db  00010000b
 812C F0                db  11110000b
 812D 10                db  00010000b
 812E F0                db  11110000b   ;top of "A"
 812F 90                db  10010000b
 8130 F0                db  11110000b   ;top of "0"
 8131 90                db  10010000b
 8132 90                db  10010000b
 8133 90                db  10010000b
 8134 F0                db  11110000b   ;top of "7"
 8135 10                db  00010000b
 8136 10                db  00010000b
 8137 10                db  00010000b
 8138 10                db  00010000b
 8139 60                db  01100000b   ;top of "1"
 813A 20                db  00100000b
 813B 20                db  00100000b
 813C 20                db  00100000b
 813D 70                db  01110000b
 813E A0                db  10100000b   ;top of "4"
 813F A0                db  10100000b
 8140 F0                db  11110000b
 8141 20                db  00100000b
 8142 20                db  00100000b
                ;
                ; interrupt routine for 64x32 format (1 page display memory)
                ;
 8143           intret0:
 8143 7A                req             ;return with Q off
 8144           intret1:
 8144 42                lda r2
 8145 70                ret             ;<-return with interrupts enabled
 8146           int:                    ;->entry with P=R1
 8146 22                dec r2          ;point to free location on stack
 8147 78                sav             ;  push T
 8148 22                dec r2
 8149 52                str r2          ;  save D
 814A C4                nop             ;3 cycles of NOP for sync
 814B 19                inc r9
 814C F800              ldi 0           ;reset DMA pointer to start of
 814E A0                plo r0          ;  display RAM
 814F 9B                ghi rb
 8150 B0                phi r0


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  8


 8151 E2                sex r2          ;NOPs for timing
 8152 E2                sex r2          ;set D=line start address (6 cycles)
 8153           disp:
 8153 80                glo r0
 8154                                   ;1861 displays a line (8 cycles)
 8154 E2                sex r2
 8155 E2                sex r2          ;reset line start address (6 cycles)
 8156 20                dec r0
 8157                                   ;1861 displays line a 2nd time (8 cycles)
 8157 A0                plo r0
 8158 E2                sex r2          ;reset line start address (6 cycles)
 8159 20                dec r0
 815A                                   ;1861 displays line a 3rd time (8 cycles)
 815A A0                plo r0
 815B E2                sex r2          ;reset line start address (6 cycles)
 815C 20                dec r0
 815D                                   ;1861 displays line a 4th time (8 cycles)
 815D A0                plo r0          ;set R0.0=line start address
 815E 3C53              bn1 disp        ;loop 32 times  
                
 8160 98                ghi r8
 8161 3267              bz  disp1       ;if beeper off, then return
 8163 AB                plo rb
 8164 2B                dec rb          ;  else decrement beeper time remaining
 8165 8B                glo rb          ;    ...high byte
 8166 B8                phi r8
 8167           disp1:
 8167 88                glo r8          ;    ...low byte
 8168 3243              bz  intret0     ;if beep time is zero, then return with Q off
 816A 7B                seq             ;  else return with Q on
 816B 28                dec r8
 816C 3044              br  intret1
                ;
                ; beep -- output a 1-cycle square wave on Q
                ;       at 2 KHz if DF=0, or 0.8 KHz if DF=1.
                ;       Also increments R7.
                ;
 816E           beepx:
 816E D3                sep r3          ;<-return
 816F           beep:
 816F F80A              ldi 10          ;2 KHz if DF=0
 8171 3B76              bnf setq
 8173 F820              ldi 32          ;0.8 KHz if DF=1
 8175 17                inc r7
 8176           setq:
 8176 7B                seq             ;set Q
 8177 BF                phi rf          ;save delay
 8178           beepl:
 8178 FF01              smi 1           ;delay
 817A 3A78              bnz beepl
 817C 396E              bnq beepx       ;exit after low half cycle


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE  9


 817E 7A                req             ;reset Q
 817F 9F                ghi rf
 8180 3078              br  beepl       ;delay again
                ;
                ; tapein -- cassette tape audio input; read one cycle.
                ;       If low frequency, returns DF=1 and increments R7.
                ;       If high frequency, returns DF=0.
                
 8182           tapeinx:
 8182 D3                sep r3          ;<-return
 8183           tapein:
 8183 F810              ldi 16          ;set timer
 8185 3D85              bn2 $           ;wait for EF2=1 (EF2 pin low)
 8187                                   ;  (i.e. wait for rising edge)
 8187           tapein1:
 8187 3D8F              bn2 tapein2     ;wait 4 x 16 cycles and test EF2
 8189 FF01              smi 1
 818B 3A87              bnz tapein1     ;if it times out, is low frequency
 818D 17                inc r7          ;  increment R7
 818E 9C                ghi rc          ;  and set D=81h
 818F           tapein2:
 818F FE                shl             ;shift high bit of D into DF
 8190                                   ;  if DF=1, is low freq
 8190                                   ;  if DF=0, is high freq 
 8190 3590              b2  $           ;wait for EF2=0 (EF2 pin high)
 8192                                   ;  (i.e. low half of this cycle)
 8192 3082              br  tapeinx     ;  and exit
                ;
                ; get a key -- scans keypad, and returns when a key is found.
                ;       'Beeps' while key is down. Returns key (0-F) in D and
                ;       on the stack. Uses RC as its dedicated program counter.
 8194           key:
 8194 D3                sep r3          ;<-return
 8195 E2                sex r2          ;->entry: scan keypad, return when found
 8196 9C                ghi rc
 8197 AF                plo rf          ;for n = 10h to 0:
 8198           keyn:
 8198 2F                dec rf          ;  decrement n
 8199 22                dec r2
 819A 8F                glo rf          ;  set keypad latch to n
 819B 52                str r2
 819C 62                out 2           ;  is key = n?
 819D E2                sex r2
 819E E2                sex r2
 819F 3E98              bn3 keyn        ;  until key found
 81A1           keyfound:
 81A1 F804              ldi 4           ;->enter with P=RC
 81A3 A8                plo r8          ;set beep duration to 4/60 sec
 81A4 88                glo r8
 81A5 3AA4              bnz $-1         ;wait for it to end
 81A7 F804              ldi 4


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE 10


 81A9 A8                plo r8          ;keep beeping until key released
 81AA 36A7              b3  $-3         ;  (i.e. EF3 pin returns high)
 81AC 88                glo r8
 81AD 31AA              bq  $-3
 81AF 8F                glo rf
 81B0 FA0F              ani 0Fh         ;mask key to 0-F
 81B2 52                str r2          ;  and return it on the stack
 81B3 3094              br  key
                
 81B5 00000000          db  0,0,0,0     ;(unused)
                
                ; getbyte -- get 2 keys from the keypad, and assemble them
                ;       into a byte. Return the byte in D. Uses R7 as its
                ;       dedicated program counter.
                
 81B9 D3                sep r3          ;<-return
 81BA           getbyte:
 81BA DC                sep rc          ;->enter; get 1st key
 81BB FE                shl
 81BC FE                shl             ;shift it into high nibble
 81BD FE                shl
 81BE FE                shl
 81BF AE                plo re          ;save it
 81C0 DC                sep rc          ;get 2nd key
 81C1 8E                glo re
 81C2 F1                or              ;combine them and return in D
 81C3 30B9              br  getbyte-1
                ;
                ; display -- display hex digit & advance pointer. On entry:
                ;       D = display table base addr + hex digit. 
                ;       RD pointer to video RAM addr of top line of char.
                ;       Uses R5 as its dedicated program counter.
                
 81C5 D4                sep r4          ;<-return
 81C6           display:                ;->entry
 81C6 AA                plo ra          ;point RA to display table + digit
 81C7 0A                ldn ra          ;get starting addr of char gen.
 81C8 AA                plo ra          ;point RA to top line bit pattern 
 81C9 F805              ldi 5           ;characters are 5 lines high
 81CB AF                plo rf          ;  RF.0=line counter
 81CC           display1:
 81CC 4A                lda ra          ;  get display pattern
 81CD 5D                str rd          ;  put in video RAM
 81CE 8D                glo rd          ;  add 8 to video RAM address
 81CF FC08              adi 8           ;    to point to next line of char
 81D1 AD                plo rd
 81D2 2F                dec rf          ;  decrement line counter
 81D3 8F                glo rf          ;  get line counter
 81D4 3ACC              bnz display1    ;  loop unti last line done
 81D6 8D                glo rd
 81D7 FCD9              adi 0D9h        ;set RD back to original video RAM


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE 11


 81D9 AD                plo rd          ;  address +1 (points to next char)
 81DA 30C5              br  display-1   ;and return
                ;
                ; dismem -- display memory address and data in hex. On entry,
                ;       R2 (stack pointer) points to an occupied byte
                ;       R6 = address, and is pointing to data byte to display
                ;       Uses R4 as its dedicated program counter.
                
 81DC           dismemx:
 81DC D3                sep r3          ;<-return
 81DD           dismem:
 81DD 22                dec r2          ;->entry
 81DE 06                ldn r6          ;push data byte to display onto stack
 81DF 73                stxd    
 81E0 86                glo r6          ;push low byte of address onto stack
 81E1 73                stxd
 81E2 96                ghi r6          ;store high byte of address on stack
 81E3 52                str r2
 81E4 F806              ldi 6           ;display 6 hex digits
 81E6 AE                plo re
 81E7 F8D8              ldi 0D8h        ;RD=position in video RAM
 81E9 AD                plo rd
 81EA           dismem1:
 81EA 02                ldn r2          ;get hex byte from stack
 81EB F6                shr
 81EC F6                shr             ;shift out low nibble
 81ED F6                shr
 81EE F6                shr
 81EF D5                sep r5          ;display high nibble
 81F0 42                lda r2          ;pop hex byte from stack
 81F1 FA0F              ani 0Fh         ;mask out high nibble
 81F3 D5                sep r5          ;display low nibble
 81F4 8E                glo re
 81F5 F6                shr
 81F6 AE                plo re
 81F7 32DC              bz  dismemx     ;if RE.0=0, exit
 81F9 3BEA              bnf dismem1     ;if DF=0, repeat for another byte
 81FB                                   ;(i.e. is address, which takes 2 bytes)
 81FB 1D                inc rd          ;else move right 2 positions in video RAM
 81FC 1D                inc rd          ;  to put space between address and data
 81FD 30EA              br  dismem1     ;  and go display 2 more digits (data byte)
 81FF 01                db  1           ;checksum?
                
 0000                   END


AVOCET SYSTEMS 1802 FAMILY ASSEMBLER -  VERSION 1.55M  SERIAL #00199

SOURCE FILE NAME: VIPROM.ASM                                                                                PAGE 12
---- SYMBOL TABLE ----

BEEP     816F          GETBYTE  81BA          MREAD    80EF          R9       0009          TAPEINX  8182
BEEPL    8178          HERE1    8008          MWRITE   80F4          RA       000A          TREAD    80C2
BEEPX    816E          HERE2    8051          NOTRAM   8012          RB       000B          TREAD1   80C5
BITMAP   8110          INDEX    8100          R0       0000          RC       000C          TREAD2   80C8
CLEAR10  8029          INT      8146          R1       0001          RD       000D          TREAD3   80D6
DISMEM   81DD          INTRET0  8143          R2       0002          RE       000E          TREAD4   80E3
DISMEM1  81EA          INTRET1  8144          R3       0003          RF       000F          TREAD5   80CF
DISMEMX  81DC          ISRAM    8022          R4       0004          SAVEREG  803E          TREAD6   80BD
DISP     8153          KEY      8194          R5       0005          SETQ     8176          TWRITE   8097
DISP1    8167          KEYFOUND 81A1          R6       0006          TAPEIN   8183          TWRITE1  809E
DISPLAY  81C6          KEYN     8198          R7       0007          TAPEIN1  8187          TWRITE2  80AD
DISPLAY1 81CC          MONITOR  8028          R8       0008          TAPEIN2  818F          
                
***** NO ERRORS DETECTED *****
       TREAD1   80C5
BITMAP   8110          INDEX    8100          R0       0000     